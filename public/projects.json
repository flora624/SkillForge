[
  {
    "id": 1,
    "title": "Design an A/B Testing System for Thumbnails",
    "domain": "System Design & Product",
    "difficulty": "Advanced",
    "problemStatement": "Inspired by Netflix's famous discovery that artwork significantly impacts user choice, your task is to design a scalable system to A/B test thousands of image variations for a new streaming service.",
    "skillsGained": ["System Design", "API Design", "Data Modeling", "A/B Testing", "Product Thinking"],
    "milestones": [
      {
        "id": "m1_schema_design",
        "title": "Milestone 1: Design the Data Schema",
        "goal": "Create a logical data model to store all information related to titles, images, tests, and user interactions.",
        "instructions": "In a document or diagram, define the schema for at least four tables/collections: 'Titles', 'ImageAssets' (linked to a title), 'ActiveTests' (linking multiple image assets to a title), and 'UserImpressions' (to log which user saw which image and if they clicked).",
        "submissionType": "file",
        "evaluation": { "type": "manual" }
      },
      {
        "id": "m2_architecture",
        "title": "Milestone 2: High-Level Architecture",
        "goal": "Create a diagram illustrating how different parts of the system would communicate to serve a test variant to a user.",
        "instructions": "Using a tool like Miro or Excalidraw, create a high-level diagram. It should include a 'Client App', a 'Homepage Service', and a 'Personalization Service'. Show the flow of a request from the client to the server to get the correct thumbnail.",
        "submissionType": "file",
        "evaluation": { "type": "manual" }
      },
      {
        "id": "m3_api_definition",
        "title": "Milestone 3: Define the Event Logging API",
        "goal": "Define the technical contract for the API endpoint that will record the results of the A/B test.",
        "instructions": "Write the definition for a `POST /v1/events/impression` endpoint. Specify the expected request body, including fields like `userId`, `imageId`, `titleId`, and a potential `eventType` (e.g., 'view', 'click', 'play').",
        "submissionType": "text",
        "evaluation": { "type": "ai_review" }
      }
    ],
    "reflectionQuiz": [
      { "id": "q1", "question": "Why is it important to serve the same image variant to a user consistently once they are assigned to a test group?", "type": "text_reflection" },
      { "id": "q2", "question": "What is a potential downside of running thousands of A/B tests simultaneously?", "type": "text_reflection" }
    ],
    "resources": [
      { "title": "Source: The Netflix Tech Blog on Artwork Personalization", "link": "https://netflixtechblog.com/artwork-personalization-c589f074ad76" },
      { "title": "System Design Basics: A/B Testing", "link": "https://www.youtube.com/watch?v=fkA9kIqGafA" }
    ],
    "resumeText": "Designed a scalable A/B testing system for personalized content, inspired by Netflix's engineering challenges, including data schema design, high-level architecture, and API endpoint definitions."
  },
  {
    "id": 2,
    "title": "Build a Music Recommendation Engine",
    "domain": "Data Science",
    "difficulty": "Advanced",
    "problemStatement": "Spotify's 'Discover Weekly' is a legendary feature. The core problem is analyzing user listening history to recommend new songs they would love. Your task is to build a simplified collaborative filtering recommendation engine.",
    "skillsGained": ["Machine Learning", "Recommendation Systems", "Collaborative Filtering", "Pandas", "Scikit-Learn"],
    "milestones": [
      {
        "id": "m1_data_prep",
        "title": "Milestone 1: Data Preparation & User-Item Matrix",
        "goal": "Process a raw dataset of user listening history into a structured format suitable for machine learning.",
        "instructions": "Using Pandas, load the provided dataset. Create a user-item utility matrix where rows represent users, columns represent songs, and the values represent the interaction (e.g., play count or a '1' for listened).",
        "submissionType": "code",
        "evaluation": { "type": "auto_keyword", "keywords": ["pd.read_csv", "pivot_table", "fillna(0)"] }
      },
      {
        "id": "m2_similarity_model",
        "title": "Milestone 2: Implement a Similarity Model",
        "goal": "Calculate the similarity between users based on their listening habits to find users with similar tastes.",
        "instructions": "Using a library like Scikit-Learn, apply a similarity metric (e.g., `cosine_similarity`) to your user-item matrix. This will produce a user-user similarity matrix.",
        "submissionType": "code",
        "evaluation": { "type": "auto_keyword", "keywords": ["cosine_similarity", "pairwise_distances"] }
      },
      {
        "id": "m3_generate_recs",
        "title": "Milestone 3: Generate Recommendations",
        "goal": "Write a function that takes a user ID and returns a list of recommended songs they haven't heard before.",
        "instructions": "For a given user, find their most similar 'neighbor' users from the similarity matrix. Identify songs these neighbors have listened to but the target user has not. Rank these songs and return the top 10 recommendations.",
        "submissionType": "code",
        "evaluation": { "type": "ai_review" }
      }
    ],
    "reflectionQuiz": [
      { "id": "q1", "question": "What is the 'cold start' problem in recommendation systems, and how might you address it?", "type": "text_reflection" },
      { "id": "q2", "question": "What is the main difference between user-based and item-based collaborative filtering?", "type": "text_reflection" }
    ],
    "resources": [
      { "title": "Source: How Spotify's Discover Weekly Works", "link": "https://medium.com/s/story/spotifys-discover-weekly-how-machine-learning-finds-your-new-music-19a41ab76efe" },
      { "title": "Music Recommendation Dataset (Kaggle)", "link": "https://www.kaggle.com/c/kkbox-music-recommendation-challenge/data" }
    ],
    "resumeText": "Developed a collaborative filtering recommendation engine in Python (Pandas, Scikit-Learn) to generate personalized song recommendations, mirroring the principles behind Spotify's 'Discover' features."
  },
  {
    "id": 3,
    "title": "Design a Frictionless Checkout Flow",
    "domain": "UI/UX Design",
    "difficulty": "Intermediate",
    "problemStatement": "Stripe revolutionized online payments by obsessing over developer experience and creating a simple, elegant checkout. Your task is to design a modern, frictionless two-page checkout flow inspired by this industry-leading standard.",
    "skillsGained": ["UI Design", "UX Design", "Prototyping", "Figma/Adobe XD", "User Empathy"],
    "milestones": [
      {
        "id": "m1_wireframes",
        "title": "Milestone 1: Design Low-Fidelity Wireframes",
        "goal": "Create basic, black-and-white layouts for the Payment and Confirmation screens to focus on structure and content placement.",
        "instructions": "In Figma, design wireframes for the two key screens. Focus on minimizing the number of input fields (e.g., single 'Full Name' field). Clearly show the price and the primary 'Pay' button. Don't use color.",
        "submissionType": "file",
        "evaluation": { "type": "manual" }
      },
      {
        "id": "m2_high_fidelity",
        "title": "Milestone 2: Create High-Fidelity Mockups",
        "goal": "Add color, typography, and visual details to your wireframes to create a polished, trustworthy design.",
        "instructions": "Develop your wireframes into full-color mockups. Choose a simple, professional color palette. Add trust signals like a lock icon next to the pay button. Ensure all text has good contrast and is readable.",
        "submissionType": "file",
        "evaluation": { "type": "manual" }
      },
      {
        "id": "m3_prototype",
        "title": "Milestone 3: Build a Clickable Prototype",
        "goal": "Link your high-fidelity mockups together to create a working prototype that demonstrates the user's journey.",
        "instructions": "Use Figma's 'Prototype' mode to connect the 'Pay' button on the Payment screen to the Confirmation screen. Add a 'Return to Shop' button on the Confirmation screen. Share the public Figma prototype link.",
        "submissionType": "text",
        "evaluation": { "type": "ai_review" }
      }
    ],
    "reflectionQuiz": [
      { "id": "q1", "question": "What is a 'trust signal' in UX design, and why is it especially important on a payment page?", "type": "text_reflection" },
      { "id": "q2", "question": "Why did you choose the layout for your form fields (e.g., single column vs. two columns)?", "type": "text_reflection" }
    ],
    "resources": [
      { "title": "Source: Stripe's Design and Documentation", "link": "https://stripe.com/docs/checkout/quickstart" },
      { "title": "Baymard Institute - Checkout Form Best Practices", "link": "https://baymard.com/blog/checkout-flow-best-practices" },
      { "title": "Figma - Free UI/UX Design Tool", "link": "https://www.figma.com/" }
    ],
    "resumeText": "Designed a high-fidelity, two-page payment checkout flow focused on minimizing user friction and building trust, applying UX principles inspired by Stripe's industry-leading developer experience."
  },
  {
    "id": 4,
    "title": "Develop a Marketplace Trust & Safety Program",
    "domain": "Business Strategy",
    "difficulty": "Intermediate",
    "problemStatement": "In its early days, Airbnb's biggest challenge was making people trust staying in a stranger's home. Your task is to develop a foundational 'Trust & Safety' program for a new peer-to-peer marketplace (e.g., for renting camera equipment).",
    "skillsGained": ["Business Strategy", "Product Marketing", "User Trust", "Risk Management"],
    "milestones": [
      {
        "id": "m1_verification",
        "title": "Milestone 1: Outline the User Verification Process",
        "goal": "Define a multi-layered process for verifying the identity of users to build a foundation of trust.",
        "instructions": "In a text document, describe a tiered verification system. Level 1: Email verification. Level 2: Phone number verification. Level 3 (for a 'Verified' badge): Government ID upload. Explain why multiple layers are important.",
        "submissionType": "text",
        "evaluation": { "type": "ai_review" }
      },
      {
        "id": "m2_reviews_guarantee",
        "title": "Milestone 2: Design the Review and Guarantee System",
        "goal": "Create policies for user reviews and a protection plan for lenders to encourage participation.",
        "instructions": "Describe a two-way, 'blind' review system (neither party sees the other's review until both submit). Propose a simple 'Host Guarantee' (e.g., '$1,000 coverage for damages') and explain its value.",
        "submissionType": "text",
        "evaluation": { "type": "ai_review" }
      },
      {
        "id": "m3_marketing_plan",
        "title": "Milestone 3: Create a Go-To-Market Message",
        "goal": "Create a simple marketing brief that communicates these trust features to new users.",
        "instructions": "Write a homepage slogan (e.g., 'Rent Gear with Confidence.'). Outline the key talking points for an email to new users, focusing on how the verification process and guarantee protect them.",
        "submissionType": "text",
        "evaluation": { "type": "ai_review" }
      }
    ],
    "reflectionQuiz": [
      { "id": "q1", "question": "For a marketplace, is 'Trust' a feature or is it the core product itself? Explain your reasoning.", "type": "text_reflection" },
      { "id": "q2", "question": "Besides a guarantee, what is another way to reduce risk for lenders on the platform?", "type": "text_reflection" }
    ],
    "resources": [
      { "title": "Source: How Airbnb Designed for Trust", "link": "https://www.fastcompany.com/3043212/how-airbnb-and-eames-democratized-design" },
      { "title": "HBR - Building a Trust-Based Marketplace", "link": "https://hbr.org/2012/10/the-four-things-you-need-to-b" }
    ],
    "resumeText": "Developed a comprehensive Trust & Safety program for a conceptual peer-to-peer marketplace, outlining strategies for user verification, a two-way review system, and a host guarantee inspired by Airbnb's foundational business challenges."
  }
]